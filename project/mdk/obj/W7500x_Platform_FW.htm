<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\W7500x_Platform_FW.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\W7500x_Platform_FW.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Thu Aug 03 13:35:42 2017
<BR><P>
<H3>Maximum Stack Usage =        320 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; doUartLoopback &rArr; readUartData &rArr; __aeabi_memcpy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[22]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">ADC_Handler</a><BR>
 <LI><a href="#[36]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22]">ADC_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[16]">DMA_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[17]">DUALTIMER0_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[18]">DUALTIMER1_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[24]">EXTI_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[10]">I2C0_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[11]">I2C1_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[12]">PORT0_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[13]">PORT1_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[14]">PORT2_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[15]">PORT3_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[19]">PWM0_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[1a]">PWM1_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[1b]">PWM2_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[1c]">PWM3_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[1d]">PWM4_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[1e]">PWM5_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[1f]">PWM6_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[20]">PWM7_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[21]">RTC_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[b]">SSP0_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[c]">SSP1_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[25]">SystemInit</a> from system_w7500x.o(.text) referenced from startup_w7500x.o(.text)
 <LI><a href="#[d]">UART0_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[e]">UART1_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[f]">UART2_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[23]">WZTOE_Handler</a> from startup_w7500x.o(.text) referenced from startup_w7500x.o(RESET)
 <LI><a href="#[27]">__main</a> from __main.o(!!!main) referenced from startup_w7500x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2b]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[92]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2f]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[93]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[94]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[95]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[96]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[97]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[98]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[99]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[34]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ab]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[ad]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[29]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[af]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[30]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; doUartLoopback &rArr; readUartData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[8a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[33]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[35]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[31]"></a>main</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = main &rArr; doUartLoopback &rArr; readUartData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartTestSuite
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initExUartTestSuite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUartLoopback
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doExUartLoopback
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W7500x_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b4]"></a>delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>TimingDelay_Decrement</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>fputc</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, printf_retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartPutc
</UL>

<P><STRONG><a name="[41]"></a>fgetc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, printf_retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartPutc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartGetc
</UL>

<P><STRONG><a name="[b6]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, printf_retarget.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>_ttywrch</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, printf_retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartPutc
</UL>

<P><STRONG><a name="[36]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printf_retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[44]"></a>initExUart</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ex_uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = initExUart &rArr; S_UART_Init &rArr; S_UART_SetBaud
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initExUartTestSuite
</UL>

<P><STRONG><a name="[47]"></a>writeExUartData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ex_uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = writeExUartData &rArr; S_UartPutc
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartPutc
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initExUartTestSuite
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doExUartLoopback
</UL>

<P><STRONG><a name="[48]"></a>getExUartReceivedDataSize</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ex_uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getExUartReceivedDataSize &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doExUartLoopback
</UL>

<P><STRONG><a name="[4a]"></a>readExUartData</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, ex_uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = readExUartData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doExUartLoopback
</UL>

<P><STRONG><a name="[4c]"></a>handleExUartIRQ</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ex_uarthandler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_ReceiveData
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_GetITStatus
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_ClearITPendingBit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[50]"></a>initUartRTSpin</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = initUartRTSpin &rArr; GPIO_Configuration &rArr; PAD_AFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartFlowcontrolToStructure
</UL>

<P><STRONG><a name="[53]"></a>getUartRS485SelectPinState</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = getUartRS485SelectPinState &rArr; GPIO_Configuration &rArr; PAD_AFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartFlowcontrolToStructure
</UL>

<P><STRONG><a name="[56]"></a>setUartFlowcontrolToStructure</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = setUartFlowcontrolToStructure &rArr; getUartRS485SelectPinState &rArr; GPIO_Configuration &rArr; PAD_AFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUartRS485SelectPinState
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartRTSpin
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart
</UL>

<P><STRONG><a name="[59]"></a>setUartInterfaceToStructure</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uarthandler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart
</UL>

<P><STRONG><a name="[57]"></a>initUart</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = initUart &rArr; setUartFlowcontrolToStructure &rArr; getUartRS485SelectPinState &rArr; GPIO_Configuration &rArr; PAD_AFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartInterfaceToStructure
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartFlowcontrolToStructure
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartTestSuite
</UL>

<P><STRONG><a name="[b7]"></a>setUartTxRxMode</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, uarthandler.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>writeUartData</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = writeUartData
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutc
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartTestSuite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUartLoopback
</UL>

<P><STRONG><a name="[5e]"></a>getUartReceivedDataSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getUartReceivedDataSize &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUartLoopback
</UL>

<P><STRONG><a name="[5f]"></a>readUartData</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, uarthandler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = readUartData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUartLoopback
</UL>

<P><STRONG><a name="[b8]"></a>flushUartRxBuffer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, uarthandler.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>handleUartZeroIRQ</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, uarthandler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
</UL>

<P><STRONG><a name="[63]"></a>handleUartOneIRQ</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uarthandler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[66]"></a>delayMsForUart</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uarthandler.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartRS485RTSpinToLow
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartRS485RTSpinToHigh
</UL>

<P><STRONG><a name="[65]"></a>setUartRS485RTSpinToHigh</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, uarthandler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMsForUart
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>

<P><STRONG><a name="[67]"></a>setUartRS485RTSpinToLow</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, uarthandler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMsForUart
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[b9]"></a>GPIO_DeInit</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>GPIO_Init</STRONG> (Thumb, 194 bytes, Stack size 20 bytes, w7500x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INT_Configuration
</UL>

<P><STRONG><a name="[68]"></a>GPIO_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INT_Configuration
</UL>

<P><STRONG><a name="[55]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUartRS485SelectPinState
</UL>

<P><STRONG><a name="[ba]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>GPIO_SetBits</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, w7500x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartRS485RTSpinToHigh
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUartRS485SelectPinState
</UL>

<P><STRONG><a name="[52]"></a>GPIO_ResetBits</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, w7500x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUartRS485RTSpinToLow
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartRTSpin
</UL>

<P><STRONG><a name="[bd]"></a>GPIO_WriteBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>GPIO_INT_Enable_Bits</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>GPIO_INT_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>GPIO_INT_Polarity_Bits</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INT_Configuration
</UL>

<P><STRONG><a name="[c1]"></a>GPIO_INT_Polarity</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>GPIO_INT_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>GPIO_Read_INTstatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>PAD_AFConfig</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, w7500x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PAD_AFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INT_Configuration
</UL>

<P><STRONG><a name="[51]"></a>GPIO_Configuration</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, w7500x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_Configuration &rArr; PAD_AFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAD_AFConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUartRS485SelectPinState
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartRTSpin
</UL>

<P><STRONG><a name="[6b]"></a>GPIO_INT_Configuration</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, w7500x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAD_AFConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INT_Polarity_Bits
</UL>

<P><STRONG><a name="[58]"></a>UART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, w7500x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart
</UL>

<P><STRONG><a name="[c4]"></a>UART_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>UART_Init</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, w7500x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART_Init &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemClock
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPLLSource
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart
</UL>

<P><STRONG><a name="[c5]"></a>UART_FIFO_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>UART_FIFO_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>UART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>UART_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartOneIRQ
</UL>

<P><STRONG><a name="[c8]"></a>UART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>UART_GetRecvStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>UART_ClearRecvStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>UART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>UART_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, w7500x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart
</UL>

<P><STRONG><a name="[61]"></a>UART_GetITStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartOneIRQ
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartZeroIRQ
</UL>

<P><STRONG><a name="[62]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartOneIRQ
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartZeroIRQ
</UL>

<P><STRONG><a name="[cc]"></a>S_UART_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>S_UART_SetBaud</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, w7500x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = S_UART_SetBaud
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemClock
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSourceClock
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_Init
</UL>

<P><STRONG><a name="[45]"></a>S_UART_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, w7500x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = S_UART_Init &rArr; S_UART_SetBaud
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_SetBaud
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initExUart
</UL>

<P><STRONG><a name="[7a]"></a>S_UART_SendData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, w7500x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartPutc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UartPuts
</UL>

<P><STRONG><a name="[4e]"></a>S_UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleExUartIRQ
</UL>

<P><STRONG><a name="[cd]"></a>S_UART_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>S_UART_SetCTRL</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>S_UART_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, w7500x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initExUart
</UL>

<P><STRONG><a name="[4d]"></a>S_UART_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleExUartIRQ
</UL>

<P><STRONG><a name="[4f]"></a>S_UART_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleExUartIRQ
</UL>

<P><STRONG><a name="[5d]"></a>UartPutc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, w7500x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeUartData
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPuts
</UL>

<P><STRONG><a name="[78]"></a>UartPuts</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutc
</UL>

<P><STRONG><a name="[79]"></a>UartGetc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetc
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetc
</UL>

<P><STRONG><a name="[40]"></a>S_UartPutc</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, w7500x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = S_UartPutc
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeExUartData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[7b]"></a>S_UartPuts</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_SendData
</UL>

<P><STRONG><a name="[42]"></a>S_UartGetc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, w7500x_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[3d]"></a>GetSystemClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_w7500x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W7500x_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_SetBaud
</UL>

<P><STRONG><a name="[77]"></a>GetSourceClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_w7500x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_SetBaud
</UL>

<P><STRONG><a name="[6d]"></a>GetPLLSource</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_w7500x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[25]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_w7500x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>SystemCoreClockUpdate_User</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, system_w7500x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate_User
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_User
</UL>

<P><STRONG><a name="[3c]"></a>SystemInit_User</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, system_w7500x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit_User &rArr; SystemCoreClockUpdate_User
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate_User
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W7500x_Init
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DUALTIMER0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DUALTIMER1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PORT0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PORT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PORT2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PORT3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PWM0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PWM1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PWM2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PWM3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PWM4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PWM5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PWM6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PWM7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SSP0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SSP1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>WZTOE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_w7500x.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_w7500x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[38]"></a>initUartTestSuite</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = initUartTestSuite &rArr; initUart &rArr; setUartFlowcontrolToStructure &rArr; getUartRS485SelectPinState &rArr; GPIO_Configuration &rArr; PAD_AFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeUartData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>initExUartTestSuite</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = initExUartTestSuite &rArr; initExUart &rArr; S_UART_Init &rArr; S_UART_SetBaud
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeExUartData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initExUart
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>doUartLoopback</STRONG> (Thumb, 48 bytes, Stack size 264 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = doUartLoopback &rArr; readUartData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUartData
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUartReceivedDataSize
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeUartData
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>doExUartLoopback</STRONG> (Thumb, 42 bytes, Stack size 264 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = doExUartLoopback &rArr; readExUartData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExUartData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getExUartReceivedDataSize
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeExUartData
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUartData
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExUartData
</UL>

<P><STRONG><a name="[d1]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartOneIRQ
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUartData
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleExUartIRQ
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExUartData
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W7500x_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate_User
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;S_UART_SetBaud
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleUartOneIRQ
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUartData
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUartReceivedDataSize
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleExUartIRQ
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExUartData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getExUartReceivedDataSize
</UL>

<P><STRONG><a name="[d4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[7e]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[d7]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[d8]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[d9]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[da]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[84]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[83]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[db]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>

<P><STRONG><a name="[dc]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[dd]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__ARM_scalbnf</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[2d]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[32]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[de]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[df]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[8b]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[8d]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[8f]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[37]"></a>W7500x_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W7500x_Init &rArr; SystemInit_User &rArr; SystemCoreClockUpdate_User
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_User
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemClock
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[7f]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[8e]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[8c]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[89]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
